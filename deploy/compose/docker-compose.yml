services:
  front:
    build:
      context: ../../packages/front
      dockerfile: dockerfile
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NODE_ENV: ${NODE_ENV}
    ports:
      - "3001:3000"
    depends_on:
      - back
    networks:
      - internal-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    tty: true
    stdin_open: true

  back:
    build:
      context: ../../packages/back
      dockerfile: Dockerfile
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      # String de conexão simples sem autenticação
      MONGODB_URI: mongodb://mongo:27017/${MONGO_INITDB_DATABASE}
      # Ou mantenha suas variáveis mas sem username/password
      DATABASE_URL: ${DATABASE_URL}
      DATABASE_HOST: mongo
      DATABASE_PORT: 27017
      DATABASE_NAME: ${MONGO_INITDB_DATABASE}
      # Remova estas linhas se não usar auth:
      # DATABASE_USERNAME: ${DATABASE_USERNAME}
      # DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_SYNCHRONIZE: ${DATABASE_SYNCHRONIZE}
      DATABASE_MAX_CONNECTIONS: ${DATABASE_MAX_CONNECTIONS}
    ports:
      - "8081:8081"
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - internal-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    tty: true
    stdin_open: true

  mongo:
    image: mongo:7
    container_name: productreview-mongo
    restart: always
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      # Sem autenticação - remova essas linhas se não quiser auth
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - internal-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  mongo-data:

networks:
  internal-network:
    driver: bridge
